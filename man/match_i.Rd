% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_i.R
\name{match_i}
\alias{match_i}
\title{Match template to soundscape}
\usage{
match_i(df_grid_i, score_method = "cor")
}
\arguments{
\item{df_grid_i}{A data frame containing information about the soundscape and template to match. The data frame must contain the following columns:
\itemize{
  \item soundscape_path: A string specifying the file path of the soundscape.
  \item template_path: A string specifying the file path of the template.
  \item template_wl: An integer specifying the window length (in samples) for the spectrogram.
  \item template_ovlp: A numeric between 0 and 1 specifying the overlap between windows for the spectrogram.
  \item template_start: A numeric specifying the start time (in seconds) of the template within the soundscape.
  \item template_end: A numeric specifying the end time (in seconds) of the template within the soundscape.
  \item template_min_freq: A numeric specifying the minimum frequency (in Hz) for the spectrogram.
  \item template_max_freq: A numeric specifying the maximum frequency (in Hz) for the spectrogram.
}}

\item{score_method}{A character string indicating the method to use for matching. Currently, two methods are available: "cor" (Pearson correlation coefficient) or "dtw" (dynamic time warping). Defaults to "cor".}
}
\value{
A tibble containing the input data frame with an additional column "score_vec", which is a data frame with columns "time_vec" (the time points of the spectrogram) and "score_vec" (the matching scores).
}
\description{
This function takes in a data frame of soundscapes and their associated templates, and matches each template to its corresponding soundscape. The matching is done using either the Pearson correlation coefficient ("cor") or dynamic time warping ("dtw").
}
\examples{
match_i(df_grid_i = my_data_frame, score_method = "cor")
}
