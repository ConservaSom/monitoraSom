% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_rois.R
\name{fetch_rois}
\alias{fetch_rois}
\title{Gather ROI tables from a directory}
\usage{
fetch_rois(rois_path = NULL, recursive = FALSE)
}
\arguments{
\item{rois_path}{Path to directory containing ROI tables in CSV format. The
expected variables must be consistent with those exported by the
segmentation app.}

\item{recursive}{Search recursively for roi tables. Defaults to FALSE.}
}
\value{
A data frame with ROI tables
}
\description{
`r lifecycle::badge("experimental")`

  This function gathers ROI tables from a directory and returns a data frame
  with the ROI tables.
}
\examples{
\dontrun{

# Load the necessary packages to run this example
library(monitoraSom)
library(dplyr)

# Load the roi tables to populate the example data
data(ls_roi_tables)

# Create a directory and export the roi tables
rois_path <- "./roi_tables"
dir.create(rois_path)
invisible(lapply(1:length(ls_roi_tables), function(i) {
  write.csv(
    ls_roi_tables[[i]],
    file.path(rois_path, names(ls_roi_tables)[i]),
    row.names = FALSE
  )
}))

# Import the roi tables as a unified dataframe
df_rois <- fetch_rois(rois_path = rois_path)
glimpse(df_rois)

# Lets use some data wrangling to separate the rois into those from focal
# recordings, destined to be used as templates, which could be later exported
# with the `export_roi_cuts_n()` function...
df_rois_templates <- df_rois \%>\%
  filter(grepl("recordings", soundscape_path))
glimpse(df_rois_templates)

# ...From those from the soundscapes, destined to be used to validate the
# detections with the `validate_by_overlap()` function.
df_rois_soundscapes <- df_rois \%>\%
  filter(grepl("soundscapes", soundscape_path))
glimpse(df_rois_soundscapes)

}
}
