% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_n.R
\name{match_n}
\alias{match_n}
\title{Batch template matching}
\usage{
match_n(
  df_grid,
  score_method = "cor",
  ncores = 1,
  output = "detections",
  output_file = NULL,
  autosave_action = "append",
  buffer_size = "template",
  min_score = NULL,
  min_quant = NULL,
  top_n = NULL
)
}
\arguments{
\item{df_grid}{The output of the function 'fetch_match_grid()}

\item{score_method}{A character string indicating the method to use for
matching. The two methods available are: "cor" (Pearson correlation
coefficient) or "dtw" (dynamic time warping). Defaults to "cor".}

\item{ncores}{An integer indicating the number of cores to be used for
parallelization. Default is 1.}

\item{output}{A character string indicating the output of the function. The
two options are: "detections" (default) or "scores". If "detections" is
selected, the function will return the output of the function
'fetch_score_peaks_i()'. If "scores" is selected, the function will return
the raw output of the matching algorithm.}

\item{output_file}{A character string indicating the path to save the results
in the format of a CSV file. Default is NULL.}

\item{autosave_action}{A character string indicating the action to be taken if
the output file already exists. The available options are: "append" (default)
and "replace".}

\item{buffer_size}{A character string indicating the size of the buffer to be
used in the function 'fetch_score_peaks_i()'. The two options are: "template"
(default) or the number of frames of the template spectrogram to be used as
buffer.}

\item{min_score}{A numeric value indicating the minimum score to be used in
the function 'fetch_score_peaks_i()'.}

\item{min_quant}{A numeric value indicating the minimum quantile to be used in
the function 'fetch_score_peaks_i()'.}

\item{top_n}{A numeric value indicating the number of top detections to be
used in the function 'fetch_score_peaks_i()'.}

\item{save_res}{A character string indicating the path to save the results in
the format of an RDS file. Default is FALSE.}
}
\value{
A tibble containing input data frame with an additional column
  "score_vec", which is a list of dataframes with the columns "time_vec" (the
  time value of each spectrogram frame) and "score_vec" (the matching score
  obtained when the template and the soundscape spectrogram of samew
  dimensions are alligned at that frame) for each match. The length of the
  "score_vec" is equal to the number of frames of the soundscape spectrogram
  minus the number of frames of the template spectrogram (i.e. the number of
  possible allignments between the two spectrograms. The score is not
  available for the first and last frames of the soundscape spectrogram
  because score cannot be calculated between spectrograms of different
  dimensions. To produce a score vector with the same number of frames of the
  soundscape spectrogram, pads with length quals half the number of frames
  from the template are added to the beginning and end of the
}
\description{
`r lifecycle::badge("experimental")`

  This function is wrapper of 'match_i()' to perform a batch computation of
  the matching vectors of the template and soundscape matches defined in the
  metadata grid obtained as output of the function 'fetch_match_grid()'. The
  available algorithms to compare spectrograms and compute matching scores
  are the Pearson correlation coefficient ("cor") or dynamic time warping
  ("dtw").
}
